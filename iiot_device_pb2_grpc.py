# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import iiot_device_pb2 as iiot__device__pb2


class IotDeviceStub(object):
    """Missing associated documentation comment in .proto file"""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.getDeviceList = channel.unary_unary(
                '/IotDevice/getDeviceList',
                request_serializer=iiot__device__pb2.DeviceListRequest.SerializeToString,
                response_deserializer=iiot__device__pb2.DeviceListResponse.FromString,
                )
        self.getDeviceInfo = channel.unary_unary(
                '/IotDevice/getDeviceInfo',
                request_serializer=iiot__device__pb2.DeviceDataRequest.SerializeToString,
                response_deserializer=iiot__device__pb2.DeviceDataResponse.FromString,
                )
        self.getDeviceHistory = channel.unary_unary(
                '/IotDevice/getDeviceHistory',
                request_serializer=iiot__device__pb2.DeviceHistoryRequest.SerializeToString,
                response_deserializer=iiot__device__pb2.DeviceHistoryResponse.FromString,
                )


class IotDeviceServicer(object):
    """Missing associated documentation comment in .proto file"""

    def getDeviceList(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getDeviceInfo(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getDeviceHistory(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_IotDeviceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'getDeviceList': grpc.unary_unary_rpc_method_handler(
                    servicer.getDeviceList,
                    request_deserializer=iiot__device__pb2.DeviceListRequest.FromString,
                    response_serializer=iiot__device__pb2.DeviceListResponse.SerializeToString,
            ),
            'getDeviceInfo': grpc.unary_unary_rpc_method_handler(
                    servicer.getDeviceInfo,
                    request_deserializer=iiot__device__pb2.DeviceDataRequest.FromString,
                    response_serializer=iiot__device__pb2.DeviceDataResponse.SerializeToString,
            ),
            'getDeviceHistory': grpc.unary_unary_rpc_method_handler(
                    servicer.getDeviceHistory,
                    request_deserializer=iiot__device__pb2.DeviceHistoryRequest.FromString,
                    response_serializer=iiot__device__pb2.DeviceHistoryResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'IotDevice', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class IotDevice(object):
    """Missing associated documentation comment in .proto file"""

    @staticmethod
    def getDeviceList(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/IotDevice/getDeviceList',
            iiot__device__pb2.DeviceListRequest.SerializeToString,
            iiot__device__pb2.DeviceListResponse.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def getDeviceInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/IotDevice/getDeviceInfo',
            iiot__device__pb2.DeviceDataRequest.SerializeToString,
            iiot__device__pb2.DeviceDataResponse.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def getDeviceHistory(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/IotDevice/getDeviceHistory',
            iiot__device__pb2.DeviceHistoryRequest.SerializeToString,
            iiot__device__pb2.DeviceHistoryResponse.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)
